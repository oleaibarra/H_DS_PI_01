I) Para hacer el deployment en deta space (aunque se supone que soporta hasta python 3.9), tuve que crear un ambiente virtual con python 3.7
	Si ya cuentas con un ambiente virtual con python 3.7 o sabes c√≥mo hacerlo, salta los pasos II y III y s√≥lo aseg√∫rate de descargar en tu ambiente fastapi y uvicorn


A continuaci√≥n se explica c√≥mo crear un ambiente virtual con anaconda (s√≠, hay que descargar anaconda). 


II) Puedes instalar Anaconda en Windows siguiendo los siguientes pasos:

1. Descarga la √∫ltima versi√≥n de Anaconda desde la p√°gina oficial de Anaconda: https://www.anaconda.com/products/individual

2. Haz doble clic en el archivo de instalaci√≥n descargado para iniciar el instalador.

3. Sigue las instrucciones del instalador para completar la instalaci√≥n. Puedes aceptar las opciones predeterminadas o personalizar la instalaci√≥n seg√∫n tus necesidades.

4. Una vez que la instalaci√≥n haya finalizado, podr√°s abrir Anaconda Navigator desde el men√∫ de inicio de Windows.

5. Desde Anaconda Navigator, podr√°s crear y administrar entornos de Python, instalar paquetes y aplicaciones, y lanzar aplicaciones como Jupyter Notebook.


III) Puedes crear un ambiente virtual para seguir este proyecto siguiendo los siguientes pasos:

1. Abre la terminal o el s√≠mbolo del sistema (Anaconda Prompt en Windows).

2. Crea un nuevo ambiente virtual con Python 3.7 utilizando el comando conda create:

	conda create -n nombre_que_quieras_para_el_ambiente python=3.7
	por ejemplo: 
	conda create -n projecto_fastapi python=3.7

3. Activa el nuevo ambiente virtual: 

	conda activate nombre_del_ambiente
	por ejemplo: 
	conda activate projecto_fastapi

4. Si hiciste las cosas bien, ver√°s el nombre de tu proyecto entre parentesis al inicio de la l√≠nea de comando: 

	(projecto_fastapi) C:\Users\Usuario>

5. Ahora que tienes tu ambiente virtual activado, puedes instalar Pandas, FastAPI y Uvicorn utilizando conda o pip.

	usando conda: conda install pandas fastapi uvicorn
	usando pip: pip install pandas fastapi uvicorn (en caso de no haberse descargado el pip installer por default con la instalaci√≥n de anconda corre primero: conda install pip


IV) Correr FastAPI de manera local con uvicorn: 

1. Crea una carpeta para tu proyecto y aseg√∫rate de que contenga un archivo con nombre "main.py" y un archivo "requirements.txt"
	(en mi caso en la carpeta tambi√©n esta un archivo "mis_funciones.py" y el archivo csv con el que trabaj√©)

2. Archivos:
	a. el archivo "requirements.txt" debe de tener los paquetes necesarios para tu proyecto. 
	   En mi caso s√≥lo utilic√© (no hace falta incluir python en el archivo): 

	   FastAPI
	   pandas

           Nota: los escribi tal cual los muestro. No indiqu√© ninguna versi√≥n en espec√≠fico. 
	
	b. el archivo "main.py" debe descargar las librer√≠as necesarias para el proyecto, en mi caso:

		from fastapi import FastAPI
		import pandas as pd
		from mis_funciones import get_max_duration
		from mis_funciones import get_score_count
		from mis_funciones import get_count_platform
		from mis_funciones import get_actor

	para m√°s detalles consultar el archivo main.py en el repositorio. 

3. Consultas de manera local: 
	a. Abre tu archivo main.py en el editor de tu preferencia. Yo utilic√© visual studio code. 

	b. En la terminal de anaconda (o en cmd si creaste tu ambiente virtual con python) despl√°zate hasta la carpeta de tu proyecto 
          (en mi caso la carpeta se llama Deta):

	  (myenv) C:\Users\Usuario\Desktop\MLOpsReviews\Deta>

	  y escribe: 
	  uvicorn main:app --reload

          lucir√≠a as√≠: 
	  (myenv) C:\Users\Usuario\Desktop\MLOpsReviews\Deta> uvicorn main:app --reload

	c. En http://127.0.0.1:8000/docs podr√°s consultar tu c√≥digo, en mi caso mis funciones. 
	   cada vez que hagas un cambio en tu archivo main.py, revisa en la terminal que uvicorn ya lo haya actualizado antes de volver al navegador. 
	   
	d. Si todo est√° corriendo bien, es hora de hacer el deployment en deta space.
	   teclea ctrl + c para salir de uvicorn. 
	   deber√≠as de estar en tu carpeta: (myenv) C:\Users\Usuario\Desktop\MLOpsReviews\Deta>

V) Deployment en deta space: 

1. Ve a Deta Space (https://deta.space) y crea una cuenta si no la tienes. 

2. Una vez con tu cuenta, ingresa a ella y ve a tu "canvas". 

3. En la parte inferior ver√°s un recuadro para escribir: escribe "general". Aun no terminas de escribir "general" y ya te presenta opciones. Una de ellas es "settings"

4. Da doble click en "settings" y selecciona la opci√≥n para generar un token (una contrase√±a). 

5. Copia la contrase√±a y gu√°rdala en alg√∫n sitio seguro (no te la volver√° a mostrar deta space). 

6. Ahora abre una terminal de powershell:
	En mi caso lo hice con visual studio code: 

	Con mi archivo main.py abierto desplegu√© la terminal (en la parte superior derecha, el cuadrado con la parte inferior pintada de negro). 
	Si la terminal no carga tu ambiente virtual, ejecuta kill terminal, y asegurate de tener el kernel seleccionado
	de tu ambiente virtual y vuelve a abrir la terminal powershell.

	Esto deber√≠a desplegar tu terminal powershell en autom√°tico: PS C:\Users\Usuario\Desktop\MLOpsReviews> conda activate myenv

	Nota: Desplegar√° tu ruta y el nombre de tu ambiente virtual (obviamente), el ejemplo es de mi proyecto. 

7. Una vez en la terminal powershell (que debe haber cargado autom√°ticamente tu ambiente virtual) escribe: 

	iwr https://get.deta.dev/space-cli.ps1 -useb | iex

	En mi caso: PS C:\Users\Usuario\Desktop\MLOpsReviews> iwr https://get.deta.dev/space-cli.ps1 -useb | iex

	Tomar√° algunos 15 segundos aproximadamente y despu√©s desplegar√° algo parecido a esto: 
 
	Space was installed successfully to C:\Users\Usuario\.detaspace\bin\space.exe
	Run 'space --help' to get started
	PS C:\Users\Usuario\Desktop\MLOpsReviews> 

8. Regresa a la terminal de conda (donde est√°s posicionado en tu carpeta del proyecto): 
	(myenv) C:\Users\Usuario\Desktop\MLOpsReviews\Deta>
	escribe: space login

	en mi caso: 
	(myenv) C:\Users\Usuario\Desktop\MLOpsReviews\Deta>space login

	desplegar√° algo similar a esto: 

	To authenticate the Space CLI with your Space account, generate a new access token in your Space settings and paste it below:

	? Enter access token (41 chars) >

9. Pega el token que generaste en deta space y que debiste haber guardado: 

	? Enter access token (41 chars) > *****************************************

	Deber√°s ver algo similiar a esto: 

	üëç Login Successful!

	(myenv) C:\Users\Usuario\Desktop\MLOpsReviews\Deta>

10. Crea un proyecto deta space: 
	escribe space new: 
	(myenv) C:\Users\Usuario\Desktop\MLOpsReviews\Deta>space new

11. Dale nombre a tu proyecto: 
	despu√©s de escribir space new te preguntar√° por el nombre que deseas darle a tu proyecto: 

	? What is your project's name? > 
	en mi caso: ? What is your project's name? > j_olea_pi01_api

12. Despu√©s de darle nombre a tu proyecto (no puede tener m√°s de 16 caracteres el nombre) ver√°s algo como esto: 

	~ No Spacefile found, trying to auto-detect configuration ...
 	Space detected the following configuration:

	Micro found in "./"
	L engine: python3.9

	? Do you want to bootstrap j_olea_pi01_api with this configuration? y

13. Dale ENTER o escribe y, ver√°s lo siguiente: 

	~ Bootstrapping j_olea_pi01_api ...
	‚úì Project j_olea_pi01_api created successfully!

	Next steps:

 	Find your project in Builder: https://deta.space/builder/b0ZVHSR8hPQA
 	Use the Spacefile to configure your app: https://go.deta.dev/docs/spacefile/v0
 	Push your code to Space with space push
 	Launch your app to the world with space release

14. Escribe space push: 
	(myenv) C:\Users\Usuario\Desktop\MLOpsReviews\Deta>space push

	ver√°s lo siguiente: 

	Validating Spacefile...

	i No app icon specified
	‚úì Micro "Deta"

	Your Spacefile looks good, proceeding with your push!!

	‚úì Successfully started your build!
	‚úì Successfully pushed your Spacefile!

	~ Pushing your code & running build process...

15. Espera a que deta cargue los paquetes necesarios. 
	cuando termine el proceso algo como esto: 

	‚úì Successfully pushed your code and updated your Builder instance!
	Run space release to create a release that others can install.

	Builder instance: https://j_olea_pi01_api-1-j5560115.deta.app

16. Escribe space release: 
	(myenv) C:\Users\Usuario\Desktop\MLOpsReviews\Deta>space release

	ver√°s lo siguiente: 
	? Do you want to use the latest revision (termite-78fm)? (y/n) y

	dale Enter (sin miedo)

	ver√°s lo siguiente: 
	~ Creating a Release with the latest Revision ...

	creating release...
	publishing release in edge locations..
	completed...
	released: j_olea_pi01_api-exp-dckS
	https://deta.space/discovery/r/grbiur85uqr1uw5s

 	Lift off -- successfully created a new Release!
 	Your Release is available globally on 5 Deta Edges
 	Anyone can install their own copy of your app.
	
17. La direccion https es la que compartes para que puedan desgargar tu proyecto: 
	en mi caso: https://deta.space/discovery/r/grbiur85uqr1uw5s

18. Si la persona no tiene cuenta deta space, le pedir√° que gener√© una. 
	si cuenta con cuenta deta space, el link lo llevar√° a una pantalla donde podr√° descargar tu proyecto. 

19. Despu√©s, dentro de tu deta space personal, o de la persona que lo haya descargado, s√≥lo hay que dar click al proyecto que habr√° aparecido en el "canvas" de la cuenta de deta. 

20. Al dar click en el proyecto te llevar√° al proyecto que generaste con fastAPI. Escribe /docs al final de direcci√≥n en la barra del buscador y ver√°s tus funciones. 







